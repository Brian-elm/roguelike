#!/usr/bin/env python3
"""
Version de debug pour tester la version optimis√©e
"""

import pygame
import sys
from config import *

def test_basic_pygame():
    """Test basique de Pygame"""
    print("üîß Test de Pygame...")
    
    try:
        pygame.init()
        screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
        pygame.display.set_caption("Test Pygame")
        
        font = pygame.font.Font(None, 36)
        text = font.render("Test Pygame OK!", True, WHITE)
        
        screen.fill(BLACK)
        screen.blit(text, (SCREEN_WIDTH//2 - 100, SCREEN_HEIGHT//2))
        pygame.display.flip()
        
        print("‚úÖ Pygame fonctionne correctement")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur Pygame: {e}")
        return False

def test_imports():
    """Test des imports"""
    print("üîß Test des imports...")
    
    try:
        from entities import Player, Enemy, Boss
        from services import GameService, GameFactory
        from renderer import OptimizedRenderer
        print("‚úÖ Tous les imports fonctionnent")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur d'import: {e}")
        return False

def test_game_creation():
    """Test de cr√©ation du jeu"""
    print("üîß Test de cr√©ation du jeu...")
    
    try:
        from roguelike_optimized import OptimizedRoguelike
        
        pygame.init()
        screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
        
        game = OptimizedRoguelike()
        print("‚úÖ Jeu cr√©√© avec succ√®s")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur de cr√©ation: {e}")
        return False

def main():
    """Fonction principale de debug"""
    print("üöÄ DEBUG DE LA VERSION OPTIMIS√âE")
    print("=" * 50)
    
    tests = [
        test_basic_pygame,
        test_imports,
        test_game_creation
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå Erreur dans le test: {e}")
            results.append(False)
    
    print("\nüìä R√âSULTATS:")
    print("=" * 50)
    
    for i, result in enumerate(results):
        status = "‚úÖ PASS√â" if result else "‚ùå √âCHOU√â"
        print(f"Test {i+1}: {status}")
    
    if all(results):
        print("\nüéâ TOUS LES TESTS SONT PASS√âS!")
        print("La version optimis√©e devrait fonctionner correctement.")
    else:
        print("\n‚ö†Ô∏è  CERTAINS TESTS ONT √âCHOU√â")
        print("V√©rifiez les erreurs ci-dessus.")
    
    pygame.quit()

if __name__ == "__main__":
    main()
